version: "3.9"

services:
  # PostgreSQL container
  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      POSTGRES_DB: booking_platform_1
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: "Vijay2799#"
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d booking_platform_1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and Celery broker
  redis:
    image: redis:7.0
    container_name: redis_broker
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch container
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: es
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -q 'status.:.[green|yellow]'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Your Django/DRF application container
  web:
    build: .
    container_name: django_web
    command: gunicorn booking_platform.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      SECRET_KEY: "Your-Secret-Key-Here"
      DEBUG: "1"
      DB_NAME: booking_platform_1
      DB_USER: myuser
      DB_PASSWORD: "Vijay2799#"
      DB_HOST: db
      DB_PORT: "5432"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"

  # Celery worker container
  celery:
    build: .
    container_name: django_celery
    command: celery -A booking_platform worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    environment:
      SECRET_KEY: "Your-Secret-Key-Here"
      DEBUG: "1"
      DB_NAME: booking_platform_1
      DB_USER: myuser
      DB_PASSWORD: "Vijay2799#"
      DB_HOST: db
      DB_PORT: "5432"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"

  # (Optional) Celery Beat for scheduled tasks
  celery-beat:
    build: .
    container_name: django_celery_beat
    command: celery -A booking_platform beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    environment:
      SECRET_KEY: "Your-Secret-Key-Here"
      DEBUG: "1"
      DB_NAME: booking_platform_1
      DB_USER: myuser
      DB_PASSWORD: "Vijay2799#"
      DB_HOST: db
      DB_PORT: "5432"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"

volumes:
  pg_data:
  redis_data:
  es_data:
